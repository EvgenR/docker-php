# Colorful prompt
source /opt/zsh-git-prompt/zshrc.sh
autoload -U colors
colors
autoload -U promptinit
promptinit

PROMPT=""
# username
if [[ $UID -ge 1000 ]]; then
	PROMPT="${PROMPT}%F{cyan}.%B%F{black}(%F{green}%n@%M%F{black})%b"
elif [[ $UID == 0 ]]; then
	PROMPT="${PROMPT}%F{cyan}.%B%F{black}(%F{red}%n@%M%F{black})%b"
else
	PROMPT="${PROMPT}%F{cyan}.%B%F{black}(%F{yellow}%n@%M%F{black})%b"
fi
# path
PROMPT="${PROMPT} %B%F{black}(%F{blue}%~%F{black})%b"
# git status
PROMPT="${PROMPT} \$(git_super_status)"
# shell
PROMPT="${PROMPT}
%b%f%k\\\` \\\$ "

# Command aliases
alias ls="ls --color=always"
alias ll="ls --color=always -lh"
alias la="ls --color=always -lhA"
alias l="ls --color=always -lha"

# History
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_IGNORE_DUPS
setopt appendhistory

# Additional features
setopt autocd beep extendedglob notify nonomatch interactivecomments

# Do not kill background processes, when the shell terminates
setopt NO_HUP

# Enable VIM mode
bindkey -e

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   history-beginning-search-backward
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" history-beginning-search-forward

bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
	function zle-line-init () {
		printf '%s' "${terminfo[smkx]}"
	}
	function zle-line-finish () {
		printf '%s' "${terminfo[rmkx]}"
	}
	zle -N zle-line-init
	zle -N zle-line-finish
fi

# Command completion
zstyle ':completion:*' menu select
zstyle ':completion:*' special-dirs true
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
autoload -Uz compinit
setopt completealiases
compinit
